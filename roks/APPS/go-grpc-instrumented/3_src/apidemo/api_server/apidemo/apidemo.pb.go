// Code generated by protoc-gen-go. DO NOT EDIT.
// source: apidemo.proto

package apidemo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type APIRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APIRequest) Reset()         { *m = APIRequest{} }
func (m *APIRequest) String() string { return proto.CompactTextString(m) }
func (*APIRequest) ProtoMessage()    {}
func (*APIRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_94682ea4f7db5f6d, []int{0}
}

func (m *APIRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIRequest.Unmarshal(m, b)
}
func (m *APIRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIRequest.Marshal(b, m, deterministic)
}
func (m *APIRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIRequest.Merge(m, src)
}
func (m *APIRequest) XXX_Size() int {
	return xxx_messageInfo_APIRequest.Size(m)
}
func (m *APIRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_APIRequest.DiscardUnknown(m)
}

var xxx_messageInfo_APIRequest proto.InternalMessageInfo

func (m *APIRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing the greetings
type APIReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APIReply) Reset()         { *m = APIReply{} }
func (m *APIReply) String() string { return proto.CompactTextString(m) }
func (*APIReply) ProtoMessage()    {}
func (*APIReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_94682ea4f7db5f6d, []int{1}
}

func (m *APIReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APIReply.Unmarshal(m, b)
}
func (m *APIReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APIReply.Marshal(b, m, deterministic)
}
func (m *APIReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APIReply.Merge(m, src)
}
func (m *APIReply) XXX_Size() int {
	return xxx_messageInfo_APIReply.Size(m)
}
func (m *APIReply) XXX_DiscardUnknown() {
	xxx_messageInfo_APIReply.DiscardUnknown(m)
}

var xxx_messageInfo_APIReply proto.InternalMessageInfo

func (m *APIReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*APIRequest)(nil), "apidemo.APIRequest")
	proto.RegisterType((*APIReply)(nil), "apidemo.APIReply")
}

func init() {
	proto.RegisterFile("apidemo.proto", fileDescriptor_94682ea4f7db5f6d)
}

var fileDescriptor_94682ea4f7db5f6d = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x2c, 0xc8, 0x4c,
	0x49, 0xcd, 0xcd, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x14, 0xb8,
	0xb8, 0x1c, 0x03, 0x3c, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8, 0x58, 0xf2,
	0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x25, 0x15, 0x2e, 0x0e,
	0xb0, 0x8a, 0x82, 0x9c, 0x4a, 0x21, 0x09, 0x2e, 0xf6, 0xdc, 0xd4, 0xe2, 0xe2, 0xc4, 0x74, 0x98,
	0x12, 0x18, 0xd7, 0xa8, 0x80, 0x8b, 0xd9, 0x31, 0xc0, 0x53, 0xc8, 0x88, 0x8b, 0xcd, 0x31, 0xc0,
	0xd3, 0x3d, 0xb5, 0x44, 0x48, 0x58, 0x0f, 0x66, 0x23, 0xc2, 0x7c, 0x29, 0x41, 0x54, 0xc1, 0x82,
	0x9c, 0x4a, 0x25, 0x06, 0x21, 0x53, 0x2e, 0x4e, 0xc7, 0x00, 0x4f, 0x8f, 0xd4, 0xc4, 0x9c, 0x92,
	0x0c, 0xe2, 0xb5, 0x39, 0x69, 0x71, 0x49, 0x64, 0xe6, 0xeb, 0xa5, 0x17, 0x15, 0x24, 0xeb, 0xa5,
	0x56, 0x24, 0xe6, 0x16, 0xe4, 0xa4, 0x16, 0xc3, 0x94, 0x39, 0xf1, 0x38, 0x16, 0x64, 0xba, 0xa4,
	0xe6, 0xe6, 0x07, 0x80, 0x3c, 0x1b, 0xc0, 0x98, 0xc4, 0x06, 0xf6, 0xb5, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0xd5, 0x61, 0xe2, 0xac, 0x06, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	// Sends a greeting
	APIGet(ctx context.Context, in *APIRequest, opts ...grpc.CallOption) (*APIReply, error)
	APIHealth(ctx context.Context, in *APIRequest, opts ...grpc.CallOption) (*APIReply, error)
}

type aPIClient struct {
	cc grpc.ClientConnInterface
}

func NewAPIClient(cc grpc.ClientConnInterface) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) APIGet(ctx context.Context, in *APIRequest, opts ...grpc.CallOption) (*APIReply, error) {
	out := new(APIReply)
	err := c.cc.Invoke(ctx, "/apidemo.API/APIGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) APIHealth(ctx context.Context, in *APIRequest, opts ...grpc.CallOption) (*APIReply, error) {
	out := new(APIReply)
	err := c.cc.Invoke(ctx, "/apidemo.API/APIHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	// Sends a greeting
	APIGet(context.Context, *APIRequest) (*APIReply, error)
	APIHealth(context.Context, *APIRequest) (*APIReply, error)
}

// UnimplementedAPIServer can be embedded to have forward compatible implementations.
type UnimplementedAPIServer struct {
}

func (*UnimplementedAPIServer) APIGet(ctx context.Context, req *APIRequest) (*APIReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method APIGet not implemented")
}
func (*UnimplementedAPIServer) APIHealth(ctx context.Context, req *APIRequest) (*APIReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method APIHealth not implemented")
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_APIGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).APIGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apidemo.API/APIGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).APIGet(ctx, req.(*APIRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_APIHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(APIRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).APIHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/apidemo.API/APIHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).APIHealth(ctx, req.(*APIRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "apidemo.API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "APIGet",
			Handler:    _API_APIGet_Handler,
		},
		{
			MethodName: "APIHealth",
			Handler:    _API_APIHealth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "apidemo.proto",
}
